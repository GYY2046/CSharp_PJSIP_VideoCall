//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class VideoPreview : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;
    private bool _disposed;
  internal VideoPreview(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(VideoPreview obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~VideoPreview() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
        if (_disposed) return;
        if (disposing)
        {
            lock (this)
            {
                if (swigCPtr.Handle != global::System.IntPtr.Zero)
                {
                    if (swigCMemOwn)
                    {
                        swigCMemOwn = false;
                        pjsua2PINVOKE.delete_VideoPreview(swigCPtr);
                    }
                    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
                }
            }
        }
        _disposed = true;
  }

  public VideoPreview(int dev_id) : this(pjsua2PINVOKE.new_VideoPreview(dev_id), true) {
  }

  public bool hasNative() {
    bool ret = pjsua2PINVOKE.VideoPreview_hasNative(swigCPtr);
    return ret;
  }

  public void start(VideoPreviewOpParam param) {
    pjsua2PINVOKE.VideoPreview_start(swigCPtr, VideoPreviewOpParam.getCPtr(param));
    if (pjsua2PINVOKE.SWIGPendingException.Pending) throw pjsua2PINVOKE.SWIGPendingException.Retrieve();
  }

  public void stop() {
    pjsua2PINVOKE.VideoPreview_stop(swigCPtr);
    if (pjsua2PINVOKE.SWIGPendingException.Pending) throw pjsua2PINVOKE.SWIGPendingException.Retrieve();
  }

  public VideoWindow getVideoWindow() {
    VideoWindow ret = new VideoWindow(pjsua2PINVOKE.VideoPreview_getVideoWindow(swigCPtr), true);
    return ret;
  }

  public VideoMedia getVideoMedia() {
    VideoMedia ret = new VideoMedia(pjsua2PINVOKE.VideoPreview_getVideoMedia(swigCPtr), true);
    if (pjsua2PINVOKE.SWIGPendingException.Pending) throw pjsua2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
